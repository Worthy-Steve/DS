# Statement 17
# Implement the training of a DNN using Adam and SGD optimizers with a learning rate of 0.001 on the Wildfire dataset. Provide comparative plots.

import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Flatten, Dense
from tensorflow.keras.optimizers import Adam, SGD

# Step 1: Dataset path
train_val_path = r"D:\SEM 6\Deep Learning\Datasets\forest_fire\Training and Validation"

# Step 2: Preprocessing
img_height, img_width = 64, 64
batch_size = 32

train_datagen = ImageDataGenerator(rescale=1./255, validation_split=0.1)

train_generator = train_datagen.flow_from_directory(
    train_val_path,
    target_size=(img_height, img_width),
    batch_size=batch_size,
    class_mode='binary',
    subset='training',
    shuffle=True
)

val_generator = train_datagen.flow_from_directory(
    train_val_path,
    target_size=(img_height, img_width),
    batch_size=batch_size,
    class_mode='binary',
    subset='validation',
    shuffle=False
)

# Step 3: Train model function
def train_model(optimizer, label):
    model = Sequential([
        Flatten(input_shape=(img_height, img_width, 3)),
        Dense(128, activation='relu'),
        Dense(64, activation='relu'),
        Dense(1, activation='sigmoid')
    ])
    model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=['accuracy'])
    history = model.fit(train_generator, epochs=10, validation_data=val_generator, verbose=1)
    return history, label

# Step 4: Train with Adam and SGD
history_adam, label_adam = train_model(Adam(learning_rate=0.001), "Adam")
history_sgd, label_sgd = train_model(SGD(learning_rate=0.001), "SGD")

# Step 5: Plot Accuracy Comparison
plt.figure(figsize=(10, 5))
plt.plot(history_adam.history['accuracy'], label='Train Acc (Adam)', linestyle='--')
plt.plot(history_adam.history['val_accuracy'], label='Val Acc (Adam)')
plt.plot(history_sgd.history['accuracy'], label='Train Acc (SGD)', linestyle='--')
plt.plot(history_sgd.history['val_accuracy'], label='Val Acc (SGD)')
plt.title('Adam vs SGD: Accuracy Comparison')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.grid(True)
plt.show()

# Step 6: Plot Loss Comparison
plt.figure(figsize=(10, 5))
plt.plot(history_adam.history['loss'], label='Train Loss (Adam)', linestyle='--')
plt.plot(history_adam.history['val_loss'], label='Val Loss (Adam)')
plt.plot(history_sgd.history['loss'], label='Train Loss (SGD)', linestyle='--')
plt.plot(history_sgd.history['val_loss'], label='Val Loss (SGD)')
plt.title('Adam vs SGD: Loss Comparison')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()
plt.grid(True)
plt.show()